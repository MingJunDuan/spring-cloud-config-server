/*
 * Copyright 2016 the original author or authors.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
@tag "java"
@tag "spring"
@tag "spring-boot"
@tag "spring-cloud"
@description "Creates a new Spring Cloud Config Server project"
@generator
editor NewGitBackedSpringCloudConfigServer

uses atomist-project-templates.common-editors.PomParameterizer
uses atomist-project-templates.common-editors.PackageMove

@maxLength 21
@description "Name of your new project."
@displayName "Project Name"
param project_name: @project_name

@default "myartifact"
@optional
@maxLength 21
@description "A valid Maven Artifact ID, often used to specify the output of your project"
@displayName "Maven Artifact ID"
param artifact_id: @artifact_id

@default "mygroup"
@description "Group id: Used by Maven"
@optional
@displayName "Group ID"
@validInput "A valid Maven Group ID, often used to indicate your company, group or open source project"
param group_id: @group_id

@default "0.0.1-SNAPSHOT"
@displayName "Semantic Version"
@optional
@description "A Semantic Version number of the form: MAJOR.MINOR.PATCH"
@validInput "MAJOR.MINOR.PATCH"
param version: @semantic_version

@default "My new project"
@optional
@description "Description of the new project"
@displayName "description"
@validInput "Free Text"
param description: .*

@default "com.myorg"
@displayName "Root Package"
@optional
@description "Root package for your generated source"
@validInput "A valid Java package name, i.e. com.myorg"
param root_package: @java_package

@default "https://github.com/atomist-project-templates/config-repo"
@displayName "Git Repo Location"
@optional
@description "Git repository location for configuration to serve (i.e. https://github.com/atomist-project-templates/sample-config-repo)"
@validInput "A valid URI"
param git_repo_location: @url

let old_package = "com.atomist.configurationserver"
let default_git_repo_location = "uri: https://github.com/atomist-project-templates/config-repo"

SwitchReadmes
PomParameterizer name = project_name
PackageMove new_package = root_package
AddCreationDateToReadme
DeleteLicense

with file f when name="application.yml"
  do replace default_git_repo_location { "uri: " + git_repo_location }


@description "Switches READMEs replacing markers with a set of parameters"
editor SwitchReadmes

@description "Name of the new project"
@displayName "Name"
param project_name: @project_name

@default ""
@optional
@description "Description of the new project"
@displayName "description"
@validInput "Free Text"
param description: .*

let template = "readme.vm"

with project
	do merge template to "README.md"


@description "Adds a creation date to the README.md"
editor AddCreationDateToReadme

with file f when path = "README.md"
  do replace "{{creation_date}}" { new Date().toISOString().split('T')[0] }


@description "Delete license file from the template content"
editor DeleteLicense

with project
  do deleteFile "LICENSE"
